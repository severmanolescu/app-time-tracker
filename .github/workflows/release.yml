name: Release Build

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.1.0)'
        required: false

permissions:
  contents: write

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Windows x64
      run: npm run build
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prism-windows-installer
        path: |
          dist/*.exe
          dist/*.zip
        retention-days: 30

    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.exe
          dist/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install system dependencies (Linux)
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3

    - name: Install dependencies
      run: npm ci

    - name: Build Linux x64
      run: npx electron-builder --linux --x64
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prism-linux
        path: |
          dist/*.AppImage
          dist/*.deb
        retention-days: 30

    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.AppImage
          dist/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build macOS (Universal)
      run: npx electron-builder --mac --x64 --arm64
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: prism-macos
        path: |
          dist/*.dmg
          dist/*.zip
        retention-days: 30

    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.dmg
          dist/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
