name: Release Build

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.1.0)'
        required: false

permissions:
  contents: write

jobs:
  build-release:
    name: Build Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install cross-compile tools for ARM64
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Build application (x64)
      if: matrix.os == 'ubuntu-latest'
      run: npm run build
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Build application (ARM64)
      if: matrix.os == 'ubuntu-latest'
      run: npm run build -- --arch=arm64
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Build application (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run build
      env:
        CI: true
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: prism-windows-installer
        path: |
          dist/*.exe
          dist/*.zip
        retention-days: 30

    - name: Upload Linux artifacts (x64)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: prism-linux-installer
        path: |
          dist/*.AppImage
          dist/*.deb
        retention-days: 30

    - name: Upload Linux artifacts (ARM64)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifa
